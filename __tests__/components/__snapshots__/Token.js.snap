// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Token component renders the token correctly renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Token
    account="0xabc"
    contract="0xabc"
    modals={Object {}}
    name="nft name"
    toggleModal={[Function]}
    token={
      Object {
        "image": "https://example.com/image.jpg",
        "name": "Token",
      }
    }
    tokenId={123}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef
          src="https://example.com/image.jpg"
          width="100%"
        />,
        <p>
          Token
        </p>,
        <p>
          &lt;No description given&gt;
        </p>,
        <button>
          Transfer
        </button>,
        <i>
          <Connect(TransferModal)
            contract="0xabc"
            from="0xabc"
            tokenId={123}
          />
        </i>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "src": "https://example.com/image.jpg",
          "width": "100%",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  display: inline-block;
  width: 100px;
  height: 100px;
",
            ],
          },
          "displayName": "styled.img",
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": "img",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Token",
        },
        "ref": null,
        "rendered": "Token",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "<No description given>",
        },
        "ref": null,
        "rendered": "<No description given>",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Transfer",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "Transfer",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Connect(TransferModal)
            contract="0xabc"
            from="0xabc"
            tokenId={123}
          />,
          "isOpen": undefined,
          "onBackgroundClick": undefined,
          "onEscapeKeydown": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "contract": "0xabc",
            "from": "0xabc",
            "tokenId": 123,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": undefined,
      "componentStyle": ComponentStyle {
        "componentId": "sc-bwzfXH",
        "isStatic": true,
        "rules": Array [
          "
  margin: 1em;
  border: 1px solid #eee;
  border-radius: 1px;
  padding: 1em;
  background-color: #fafafa;
  text-align: center;
  width: 150px;
",
        ],
      },
      "displayName": "styled.div",
      "render": [Function],
      "styledComponentId": "sc-bwzfXH",
      "target": "div",
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            src="https://example.com/image.jpg"
            width="100%"
          />,
          <p>
            Token
          </p>,
          <p>
            &lt;No description given&gt;
          </p>,
          <button>
            Transfer
          </button>,
          <i>
            <Connect(TransferModal)
              contract="0xabc"
              from="0xabc"
              tokenId={123}
            />
          </i>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "src": "https://example.com/image.jpg",
            "width": "100%",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
  display: inline-block;
  width: 100px;
  height: 100px;
",
              ],
            },
            "displayName": "styled.img",
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "img",
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Token",
          },
          "ref": null,
          "rendered": "Token",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "<No description given>",
          },
          "ref": null,
          "rendered": "<No description given>",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Transfer",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "Transfer",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Connect(TransferModal)
              contract="0xabc"
              from="0xabc"
              tokenId={123}
            />,
            "isOpen": undefined,
            "onBackgroundClick": undefined,
            "onEscapeKeydown": undefined,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "contract": "0xabc",
              "from": "0xabc",
              "tokenId": 123,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": undefined,
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": true,
          "rules": Array [
            "
  margin: 1em;
  border: 1px solid #eee;
  border-radius: 1px;
  padding: 1em;
  background-color: #fafafa;
  text-align: center;
  width: 150px;
",
          ],
        },
        "displayName": "styled.div",
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "div",
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
